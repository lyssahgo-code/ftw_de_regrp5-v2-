# compose.yaml
#
# ─────────────────────────────────────────────────────────────────────────────
# HOW TO USE (no shell exports; just edit this file)
# ─────────────────────────────────────────────────────────────────────────────
# MODES
# 1) LOCAL (all-in-one on laptop):
#    - Ensure CH_HOST below for dlt/dbt is set to "clickhouse" (default).
#    - Start core:    docker compose --compatibility up -d --profile core
#    - Run dlt job:   docker compose --profile jobs run --rm dlt python pipelines/dlt-mpg-pipeline.py
#    - Run dbt:       docker compose --profile jobs run --rm dbt run && docker compose --profile jobs run --rm dbt test
#    - Metabase:      http://localhost:3001
#
# 2) REMOTE (students target a server you run):
#    - On THE SERVER, expose ports and start only core:
#         docker compose --compatibility up -d --profile core
#      (Make sure inbound 8123 (ClickHouse HTTP) and 3001 (Metabase) are allowed.)
#    - On STUDENT laptops, DO NOT start core. Edit the dlt/dbt env below:
#         CH_HOST: "<SERVER_PUBLIC_IP_OR_DNS>"
#         CH_HTTP_PORT: "8123"
#         CH_TCP_PORT:  "9000"
#         CH_USER / CH_PASS: (what the teacher set on the server)
#         DBT_SCHEMA: "ftw_<student_alias>"   # to avoid clobbering each other
#      Then run the same dlt/dbt commands shown above (jobs profile only).
#
# NOTES
# - Windows 10/11: run in WSL2 Ubuntu; clone repo inside WSL home for best performance.
# - Apple Silicon: if you hit arch issues, uncomment the "platform: linux/amd64" lines.
# - Resource limits require --compatibility flag with Docker Compose v2 (kept for teaching).
#
# ─────────────────────────────────────────────────────────────────────────────

services:
  # ──────────────────────────────────────────────────────────
  # PERSISTENT SERVICES (start these in LOCAL mode or on SERVER)
  # ──────────────────────────────────────────────────────────

  clickhouse:
    image: clickhouse/clickhouse-server:23.12
    # platform: linux/amd64    # ← uncomment on Apple Silicon ONLY if you hit arch errors
    container_name: clickhouse_personal
    ports:
      - "8123:8123"   # HTTP (used by Metabase / curl)
      - "9000:9000"   # Native TCP (used by drivers / dlt)
    volumes:
      - ./dlt:/var/dlt
      - ./dlt/extract-loads/staging:/app/data
      - ./dlt/extract-loads/staging/g1_oulad:/app/data/g1_oulad
      - ./dlt/extract-loads/staging/oulad_test1:/app/data/oulad_test1
      - ./.dlt/secrets.toml:/var/dlt/.dlt/secrets.toml:ro
      
    healthcheck:
      test: ["CMD-SHELL", "clickhouse-client --query='SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["core"]

  metabase:
    image: metabase/metabase:latest
    # platform: linux/amd64
    container_name: metabase_personal
    ports:
      - "3001:3000"   # LOCAL: http://localhost:3001  •  SERVER: http://<server>:3001
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - metabase_data:/metabase-data
    depends_on:
      clickhouse:
        condition: service_healthy
    profiles: ["core"]

  chinook_fetch:
    image: alpine:3.20
    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -eux
        apk add --no-cache curl
        mkdir -p /initdb
        curl -fsSL https://raw.githubusercontent.com/lerocha/chinook-database/master/ChinookDatabase/DataSources/Chinook_PostgreSql.sql \
          -o /initdb/01-load-chinook.sql
        ls -lh /initdb
    volumes:
      - chinook_init:/initdb
    restart: "no"
    profiles: ["core"]

  postgres_chinook:
    image: postgres:14-alpine
    container_name: chinook_postgres_personal
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: chinook
      POSTGRES_PASSWORD: chinook
    volumes:
      - chinook_init:/docker-entrypoint-initdb.d:ro
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    depends_on:
      chinook_fetch:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chinook -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
    profiles: ["core"]

  # ──────────────────────────────────────────────────────────
  # JOB-STYLE SERVICES (ephemeral; run with --profile jobs)
  # ──────────────────────────────────────────────────────────

  dlt:
    build: ./dlt
    container_name: dlt_personal
    working_dir: /var/dlt
    volumes:
      - ./dlt:/var/dlt
      - ./dlt/extract-loads/staging:/app/data
      - ./dlt/extract-loads/staging/g1_oulad:/app/data/g1_oulad
      - ./dlt/extract-loads/staging/oulad_test1:/app/data/oulad_test1
      - ./.dlt/secrets.toml:/var/dlt/.dlt/secrets.toml:ro
    environment:
      DESTINATION__CLICKHOUSE__CREDENTIALS__HOST:       "54.87.106.52"
      DESTINATION__CLICKHOUSE__CREDENTIALS__PORT:       "9000"
      DESTINATION__CLICKHOUSE__CREDENTIALS__HTTP_PORT:  "8123"
      DESTINATION__CLICKHOUSE__CREDENTIALS__USERNAME:   "ftw_user"
      DESTINATION__CLICKHOUSE__CREDENTIALS__PASSWORD:   "ftw_pass"
      DESTINATION__CLICKHOUSE__CREDENTIALS__DATABASE:   "raw"
      DESTINATION__CLICKHOUSE__CREDENTIALS__SECURE:     "0"

      POSTGRES_HOST:     "54.87.106.52"
      POSTGRES_PORT:     "5432"
      POSTGRES_USER:     "chinook"
      POSTGRES_PASSWORD: "chinook"
      POSTGRES_DB:       "chinook"
    restart: "no"
    profiles: ["jobs"]

  dbt:
    build: ./dbt
    container_name: dbt_personal
    working_dir: /workdir
    volumes:
      - ./dbt:/workdir
    environment:
      CH_HTTP_PORT: "8123"
      CH_TCP_PORT:  "9000"
      CH_USER: "ftw_user"
      CH_PASS: "ftw_pass"
    command: dbt run
    restart: "no"
    profiles: ["jobs"]

volumes:
  clickhouse_data_personal:
  metabase_data:
  chinook_init:
  pgdata:
